body {
    font-family: Arial, sans-serif;
    background: #a1afc6;
}

header {
    max-width: 1200px;
    margin: 0 auto;
}

section {
    display: flex;
    flex-direction: column;
    max-width: 1200px;
    margin: 0 auto;
}

.information {
    display: flex;
    margin-top: 15px;
}

.place, .events_date {
    flex: 1;
}

.artists {
    display: flex;
    flex-wrap: wrap;
    font-size: 16px;
    margin-top: 20px;
    margin-bottom: 20px;
}

.artists_list_title {
    font-weight: bold;
    margin-right: 20px;
}

.artist {
    margin-right: 10px;
}

.artist:after {
    content: ',';
}

.artist:last-of-type:after {
    content: none;
}

.notification_btn_container {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding: 15px;
    border-top: 1px solid #346ac1;
}

.notificating_button {
    background: #c11321;
    padding: 5px;
    border-radius: 4px;
    margin-left: 10px;
}

.notificating_button:hover {
    opacity: 0.7;
    cursor: pointer;
}

.not_btn_img {
    width: 24px;
    height: 24px;
}

.tab {
    position: relative;
    margin-bottom: 1px;
    width: 100%;
    color: #346ac1;;
    overflow: hidden;
}
.tab input {
    position: absolute;
    opacity: 0;
    z-index: -1;
}
.tab label {
    position: relative;
    display: block;
    padding: 0 0 0 1em;
    background: #ffffff;
    border-top: 1px solid #346ac1;
    color: #346ac1;
    font-weight: bold;
    line-height: 3;
    cursor: pointer;
}

.tab-content {
    max-height: 0;
    overflow: hidden;
    background: white;
    -webkit-transition: max-height .35s;
    -o-transition: max-height .35s;
    transition: max-height .35s;
    padding-left: 15px;
    padding-right: 15px;
}

.tab-content p {
    margin: 1em;
}
/* :checked */
.tab input:checked ~ .tab-content {
    max-height: 100vh;
}
/* Icon */
.tab label::after {
    position: absolute;
    right: 0;
    top: 0;
    display: block;
    width: 3em;
    height: 3em;
    line-height: 3;
    text-align: center;
    -webkit-transition: all .35s;
    -o-transition: all .35s;
    transition: all .35s;
}
.tab input[type=checkbox] + label::after {
    content: "+";
}

.tab input[type=checkbox]:checked + label::after {
    transform: rotate(315deg);
}
